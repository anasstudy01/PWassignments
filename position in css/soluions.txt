Task 1: Positioning Boxes
html
<!DOCTYPE html>
<html>
<head>
    <style>
        body {
            margin: 0;
            height: 100vh;
            position: relative;
        }
        .box {
            width: 50px;
            height: 50px;
            position: absolute;
            display: flex;
            justify-content: center;
            align-items: center;
            font-weight: bold;
            color: white;
        }
        #boxA {
            background-color: #ff5252;
            left: 200px;
            top: 200px;
        }
        #boxB {
            background-color: #4caf50;
            left: calc(200px - 30px - 25px); /* 200px (A's left) - 30px (offset) - 25px (half width) */
            top: calc(200px - 30px - 25px); /* 200px (A's top) - 30px (offset) - 25px (half height) */
        }
        #boxC {
            background-color: #2196f3;
            left: calc(200px + 30px - 25px);
            top: calc(200px - 30px - 25px);
        }
        #boxD {
            background-color: #ff9800;
            left: calc(200px - 30px - 25px);
            top: calc(200px + 30px - 25px);
        }
        #boxE {
            background-color: #9c27b0;
            left: calc(200px + 30px - 25px);
            top: calc(200px + 30px - 25px);
        }
    </style>
</head>
<body>
    <div class="box" id="boxA">A</div>
    <div class="box" id="boxB">B</div>
    <div class="box" id="boxC">C</div>
    <div class="box" id="boxD">D</div>
    <div class="box" id="boxE">E</div>
</body>
</html>
Task 2: Absolute vs Relative Positioning
Absolute Positioning:

Removes the element from the normal document flow

Positions relative to its nearest positioned ancestor (or the viewport if none exists)

Other elements behave as if the absolutely positioned element doesn't exist

Uses top, right, bottom, left properties for positioning

Relative Positioning:

Element remains in the normal document flow

Positions relative to its normal position in the flow

Original space in the document is preserved

Uses top, right, bottom, left properties to offset from its normal position

Task 3: Card with Float Layout
html
<!DOCTYPE html>
<html>
<head>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 600px;
            margin: 50px auto;
        }
        .card {
            border: 1px solid #ddd;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        .card-image {
            float: left;
            width: 200px;
            height: 200px;
            object-fit: cover;
            margin-right: 20px;
        }
        .card-content {
            padding: 20px;
            overflow: hidden; /* Clear the float */
        }
        .card-title {
            font-size: 24px;
            margin-top: 0;
            color: #2c3e50;
        }
        .course {
            text-align: center;
            font-size: 24px;
            font-weight: bold;
            color: #4CAF50;
            margin-top: 40px;
        }
    </style>
</head>
<body>
    <div class="card">
        <img src="earth.jpg" alt="Earth" class="card-image">
        <div class="card-content">
            <h2 class="card-title">The Earth!!!</h2>
            <p>
                Nature is Earth's masterpiece, a symphony of life composed through millennia. Its landscapes whisper tales of ancient mountains, winding rivers, and flourishing forests, reminding us of the planet's boundless beauty. From delicate petals to towering redwoods, nature's artistry stirs awe and reconnects us to the essence of existence. Nature is Earth's masterpiece, a symphony of life composed through millennia. Its landscapes whisper tales of ancient mountains, winding rivers, and flourishing forests.
            </p>
        </div>
    </div>
    
    <div class="course">Full Stack Web Development</div>
</body>
</html>
Task 4: Sticky Header
html
<!DOCTYPE html>
<html>
<head>
    <style>
        body {
            margin: 0;
            font-family: Arial, sans-serif;
            height: 2000px; /* To enable scrolling */
        }
        header {
            background-color: #2c3e50;
            color: white;
            padding: 15px;
            text-align: center;
            position: sticky;
            top: 0;
            z-index: 100;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        }
        .content {
            padding: 20px;
        }
    </style>
</head>
<body>
    <header>
        <h1>Sticky Header</h1>
    </header>
    
    <div class="content">
        <p>Scroll down to see the sticky header in action...</p>
        <p>More content here...</p>
    </div>
</body>
</html>
Task 5: z-index Explanation with Example
z-index Explanation:

Controls the stacking order of positioned elements (those with position: relative, absolute, fixed, or sticky)

Higher z-index values appear in front of lower values

Only works on elements with a specified position value

Default z-index is auto (which is equivalent to 0)

Can be positive or negative integers

Code Example:

html
<!DOCTYPE html>
<html>
<head>
    <style>
        .container {
            position: relative;
            height: 200px;
            width: 200px;
            margin: 50px;
        }
        .box {
            position: absolute;
            width: 100px;
            height: 100px;
            display: flex;
            justify-content: center;
            align-items: center;
            color: white;
            font-weight: bold;
        }
        .box1 {
            background-color: rgba(255, 0, 0, 0.7);
            top: 20px;
            left: 20px;
            z-index: 1;
        }
        .box2 {
            background-color: rgba(0, 255, 0, 0.7);
            top: 40px;
            left: 40px;
            z-index: 2;
        }
        .box3 {
            background-color: rgba(0, 0, 255, 0.7);
            top: 60px;
            left: 60px;
            z-index: 3;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="box box1">z-index 1</div>
        <div class="box box2">z-index 2</div>
        <div class="box box3">z-index 3</div>
    </div>
    <p>The blue box (z-index 3) appears on top, then green (2), then red (1) at the bottom.</p>
</body>
</html>
